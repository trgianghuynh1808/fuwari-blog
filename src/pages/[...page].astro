---
import type { GetStaticPaths } from "astro";
import Pagination from "../components/control/Pagination.astro";
import PostPage from "../components/PostPage.astro";
import { PAGE_SIZE } from "../constants/constants";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { getSortedPosts } from "../utils/content-utils";
import { siteConfig, profileConfig } from "../config";

export const getStaticPaths = (async ({ paginate }) => {
	const allBlogPosts = await getSortedPosts();
	return paginate(allBlogPosts, { pageSize: PAGE_SIZE });
}) satisfies GetStaticPaths;
// https://github.com/withastro/astro/issues/6507#issuecomment-1489916992

const { page } = Astro.props;

const len = page.data.length;

const jsonLd = {
	"@context": "https://schema.org",
	"@type": page.currentPage === 1 ? "Blog" : "CollectionPage",
	headline: page.currentPage === 1 ? `${siteConfig.title} - Blog` : `Blog Posts - Page ${page.currentPage}`,
	description: page.currentPage === 1
		? `${siteConfig.subtitle} - Blog about various topics and insights`
		: `Blog posts page ${page.currentPage} of ${page.totalPages}`,
	mainEntityOfPage: {
		"@type": "WebPage",
		"@id": new URL(`/${page.currentPage === 1 ? "" : page.currentPage}`, Astro.site).href
	},
	author: {
		"@type": "Person",
		name: profileConfig.name,
		url: Astro.site,
	},
	datePublished: new Date().toISOString().split('T')[0],
	dateModified: new Date().toISOString().split('T')[0],
	numberOfItems: page.data.length,
	...(page.currentPage > 1 && {
		isPartOf: {
			"@type": "Blog",
			"@id": new URL("/", Astro.site).href
		}
	})
};
---

<MainGridLayout canonicalUrl={new URL(`/${page.currentPage === 1 ? "" : page.currentPage}`, Astro.site).href}>
    <script is:inline slot="head" type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
    <PostPage page={page}></PostPage>
    <Pagination class="mx-auto onload-animation" page={page} style={`animation-delay: calc(var(--content-delay) + ${(len)*50}ms)`}></Pagination>
</MainGridLayout>